* Книга

издать котов-программистов в формате epub на https://publisher.bookmate.com/
http://vas3k.ru/inside/22/#scroll30
генерировать из простых текстовых файлов season_00.txt, season_01.txt
python3, mustache

- нужны какие-то картинки? где ж их взять-то
  Идея есть (на мобильнике). Нарисовать карандашом на бумаге. Сфотографировать. Обрисовать в Inkscape.

- см записи на телефоне

- вступление:
```
Все совпадения случайны. А может, не случайны. Кто их там разберет, эти совпадения?

Активно используется сленг разработчиков, упоминаются не самые популярные языки программирования и инструменты.
Кому-то написаное может быть не понятно. Это сугубо моя вина. Я бы мог написать про что-нибудь другое,
но почему-то написал вот про это.
```

ссылку на книгу добавить на сайт


* Анонс

Возможно кто-то видел в фейсбуке мои истории про котов-программистов
я собрал их в электронную книгу (за денежку)
или на моем сайте бесплатно
лайк, шэр

Опубликовать:
- фейсбук
- телеграм (эрланг и эликсир группы, FuncBy)
- на работе в nowork, mm


* Темы

Записи на телефоне

Тихон и Марфа осваивают разпределенные системы, jepsen, базы данных,
пишут проект Manul
(то есть то, что я изучаю и пишу).
data intensive applications

Названия: Байки из прода

** Очереди сообщений

Переполнение, ttl, back pressure, shredding
Erlang in Anger
RabbitMQ
pobox https://github.com/ferd/pobox


** логирование

поиск нужной инфы
форматирование для удобства чтения
вручную
макросами в емаксе, запуск на много строк сразу
питоновским скриптом

другой уровень логирования (просвещенности): elastic search, сбор с нескольких серверов в одно место
UI: поиск, удобство чтения, особенно сложных структур данных, json
(прежде чем писать про такое, надо самому попробовать на практике).


** Обратная связь

Вот есть такое решение, вот код. Это хороший подход?
хз, не узнаешь, пока не получишь обратную связь с прода (или хотя бы из тестового окружения)

Как можно ее получить? Логи и метрики

Логов обычно много, нужно уметь искать в них важное. На это нужен опыт. И тулы для поиска/фильтрации.
Метрик обычно мало, и они не те, что нужны. Чтобы сделать те, что нужны, нужен опыт.

Сперва мы получим обратную связь кое-какую. Потом сделаем ее лучше, потом еще лучше.
Потом только поймем, хороший подход мы применили, или нет.


** Неуспешные проекты

я видел пару успешных проектов, и пару проблемных. по-разному проблемных
например, в одном был овер-инжениринг. В какой-то момент стало сложно добавлять новую функциональность,
и про некоторые части системы никто толком не знал, как они работают.

Тех долг vs разработка фич. Если долг дорогой, трудно выделить на него время.
И менеджерам трудно решиться, и программистам трудно решится.
Но решившись и работая настойчиво, можно вытащить почти любой проект.
Каша из топора.

Альтернатива -- сразу взяться переписывать. Обычно это плохое решение. Потому что ...

Еще одна альтернатива -- продолжать делать фичи, пока проект не рухнет под тяжестью тех долга.
И тогда по-любому писать все заново. Не факт, что это самый плохой вариант. Может быть и не плохой.


** riak core

теория
проект на эрланге (эликсире)
тестирование jepsen
нагрузочное тестирование
сопровождение: логи, мониторинг, алертинг

начать как монолит, потом разделить на микросервисы
